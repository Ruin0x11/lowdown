csv << %w{Trip\ Date First\ Name Last\ Name StartTime EndTime Duration Share\ ID Ride\ Type Miles Cust\ Type Billed\ Amount Invoice\ Amount Apportioned\ Amount Difference Funding\ Source Fare In/Out Guest Attendant Mobility\ Type Completed Customer\ ID Project\ # Override Trip\ Purpose F.E.\ Project\ Name SPD\ Billing\ Miles Customer Total\ Trips Provider Service\ End\ Date Billing\ Distance}
@trips.each do |trip|
  csv << [
    trip.date,
    trip.customer.first_name,
    trip.customer.last_name,
    trip.start_at.strftime("%I:%M %p"),
    trip.end_at.strftime("%I:%M %p"),
    seconds_to_hours_colon_minutes_colon_seconds(trip.apportioned_duration),
    trip.routematch_share_id,
    trip.shared? ? 'Shared' : 'Indiv',
    trip.apportioned_mileage,
    trip.customer.customer_type,
    trip.fare,
    trip.calculated_bpa_fare,
    trip.apportioned_fare,
    ((trip.calculated_bpa_fare || 0) - (trip.fare || 0)),
    trip.allocation.override.try(:name).try(:split,'::').try(:slice,0),
    trip.customer_pay,
    trip.in_trimet_district ? 'In' : 'Out',
    trip.guest_count,
    trip.attendant_count,
    trip.mobility,
    trip.result_code,
    trip.customer.routematch_customer_id,
    trip.allocation.project.try(:project_number),
    trip.allocation.override.try(:name),
    trip.purpose_type,
    trip.allocation.project.try(:name),
    trip.estimated_trip_distance_in_miles,
    1,
    trip.guest_count + trip.attendant_count + 1,
    trip.allocation.provider.try(:subcontractor),
    service_end_date(trip.date),
    trip.bpa_billing_distance
  ]
end
