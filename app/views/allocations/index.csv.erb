<% headers = [
      'Allocation Name',
      'Group Trip',
      'Program Name',
      'Project Name',
      'Project Number',
      'Project Funding Source',
      'Project Funding Subsource',
      'Provider Name',
      'Provider Short Name',
      'Provider Type',
      'Provider Agency',
      'Provider Branch',
      'Provider Subcontractor',
      'County',
      'Trip Collection Method',
      'Run Collection Method',
      'Cost Collection Method',
      'RouteMatch Override',
      'RouteMatch Provider Code',
      'Contract',
      'Admin/Ops Data',
      'Vehicle Maintenance Data',
      'TriMet Provider',
      'TriMet Program',
      'TriMet E&D Report Group',
      'Inactivated Date'
] %>
<% csv = '' %>
<% require 'csv' %>
<% raw(CSV.generate(csv,:row_sep => "\r\n") do |csv| %>
  <% csv << headers %>
  <% @allocations.each do |a| %>
    <% row = [
      a.name,
      a.group_trip ? 'True' : 'False',
      a.program,
      a.project.try(:name),
      a.project.try(:project_number),
      a.project.try(:funding_source),
      a.project.try(:funding_subsource),
      a.provider.try(:name),
      a.provider.try(:short_name),
      a.provider.try(:provider_type),
      a.provider.try(:agency),
      a.provider.try(:branch),
      a.provider.try(:subcontractor),
      a.county,
      a.trip_collection_method,
      a.run_collection_method,
      a.cost_collection_method,
      a.override.try(:name),
      a.routematch_provider_code,
      a.contract,
      a.admin_ops_data, 
      a.vehicle_maint_data,
      a.trimet_provider.try(:name),
      a.trimet_program.try(:name),
      a.trimet_report_group.try(:name),
      a.inactivated_on
    ] %>
    <% csv << row %>
  <% end %>
<% end) %>
